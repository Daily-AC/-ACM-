Neo 想要逃离矩阵世界。在他面前有一排 n 个按钮，每个按钮都有一个整数权重：a1,a 2,…,a n。
Neo 被固定住了，但他可以创建和移动克隆体。这意味着他可以按任意顺序执行以下两种操作，次数不限：
在特定按钮前创建一个克隆体。
将现有的克隆体向左或向右移动一个位置。
当一个克隆体位于尚未被按下的按钮前时（无论他是被创建还是被移动的），他会立即按下该按钮。如果按钮已经被按下过，克隆体不会做任何操作——每个按钮只能被按下一次。
为了成功逃脱，Neo 需要以特定的顺序按下所有按钮：按钮权重的序列必须是非递增的。也就是说，如果 b 1,b 2,…,b n是按按钮的顺序对应的权重，那么必须满足 b1≥b 2≥⋯≥b n。
你的任务是确定 Neo 需要创建的最少克隆体数量，以便能够以有效顺序按下所有按钮。
题意：题意挺好理解的，从高到低按按钮，如果不能连续，就新建一个。
思路：找波峰就可以了，虽然赛时我想出来了，但是怎么交都不对，看了题解后，发现处理好细节就行；
#include<bits/stdc++.h>
using namespace std;
#define mod 998244353

void solve(){
  
	int n;
	cin >> n;
	vector<int> a;
	a.push_back(1e-9);
	for(int i=0;i<n;i++){
		int x;
		cin >> x;
		if(x!=a.back()) a.push_back(x);
	}
	a.push_back(1e-9);
	  
	long long cnt =0;
	for(int i=1;i<a.size()-1;i++){
		if(a[i]>a[i-1]&&a[i]>a[i+1]) cnt++;
	}
	cout << cnt << endl;
}


int main(){
	
	int t;
	cin >> t;
	while(t--){
		solve();
	}
	return 0;
}
